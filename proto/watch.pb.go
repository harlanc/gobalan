// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watch.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WatchRequest struct {
	// Types that are valid to be assigned to RequestUnion:
	//	*WatchRequest_CreateRequest
	//	*WatchRequest_HeartbeatRequest
	//	*WatchRequest_LoadReportRequest
	RequestUnion         isWatchRequest_RequestUnion `protobuf_oneof:"request_union"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *WatchRequest) Reset()         { *m = WatchRequest{} }
func (m *WatchRequest) String() string { return proto.CompactTextString(m) }
func (*WatchRequest) ProtoMessage()    {}
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{0}
}

func (m *WatchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchRequest.Unmarshal(m, b)
}
func (m *WatchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchRequest.Marshal(b, m, deterministic)
}
func (m *WatchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchRequest.Merge(m, src)
}
func (m *WatchRequest) XXX_Size() int {
	return xxx_messageInfo_WatchRequest.Size(m)
}
func (m *WatchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchRequest proto.InternalMessageInfo

type isWatchRequest_RequestUnion interface {
	isWatchRequest_RequestUnion()
}

type WatchRequest_CreateRequest struct {
	CreateRequest *WatchCreateRequest `protobuf:"bytes,1,opt,name=create_request,json=createRequest,proto3,oneof"`
}

type WatchRequest_HeartbeatRequest struct {
	HeartbeatRequest *WatchHeartbeatRequest `protobuf:"bytes,2,opt,name=heartbeat_request,json=heartbeatRequest,proto3,oneof"`
}

type WatchRequest_LoadReportRequest struct {
	LoadReportRequest *WatchLoadReportRequest `protobuf:"bytes,3,opt,name=load_report_request,json=loadReportRequest,proto3,oneof"`
}

func (*WatchRequest_CreateRequest) isWatchRequest_RequestUnion() {}

func (*WatchRequest_HeartbeatRequest) isWatchRequest_RequestUnion() {}

func (*WatchRequest_LoadReportRequest) isWatchRequest_RequestUnion() {}

func (m *WatchRequest) GetRequestUnion() isWatchRequest_RequestUnion {
	if m != nil {
		return m.RequestUnion
	}
	return nil
}

func (m *WatchRequest) GetCreateRequest() *WatchCreateRequest {
	if x, ok := m.GetRequestUnion().(*WatchRequest_CreateRequest); ok {
		return x.CreateRequest
	}
	return nil
}

func (m *WatchRequest) GetHeartbeatRequest() *WatchHeartbeatRequest {
	if x, ok := m.GetRequestUnion().(*WatchRequest_HeartbeatRequest); ok {
		return x.HeartbeatRequest
	}
	return nil
}

func (m *WatchRequest) GetLoadReportRequest() *WatchLoadReportRequest {
	if x, ok := m.GetRequestUnion().(*WatchRequest_LoadReportRequest); ok {
		return x.LoadReportRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*WatchRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*WatchRequest_CreateRequest)(nil),
		(*WatchRequest_HeartbeatRequest)(nil),
		(*WatchRequest_LoadReportRequest)(nil),
	}
}

type WatchCreateRequest struct {
	ServicePort          string   `protobuf:"bytes,1,opt,name=service_port,json=servicePort,proto3" json:"service_port,omitempty"`
	HeartbeatInterval    uint32   `protobuf:"varint,2,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchCreateRequest) Reset()         { *m = WatchCreateRequest{} }
func (m *WatchCreateRequest) String() string { return proto.CompactTextString(m) }
func (*WatchCreateRequest) ProtoMessage()    {}
func (*WatchCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{1}
}

func (m *WatchCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchCreateRequest.Unmarshal(m, b)
}
func (m *WatchCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchCreateRequest.Marshal(b, m, deterministic)
}
func (m *WatchCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchCreateRequest.Merge(m, src)
}
func (m *WatchCreateRequest) XXX_Size() int {
	return xxx_messageInfo_WatchCreateRequest.Size(m)
}
func (m *WatchCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchCreateRequest proto.InternalMessageInfo

func (m *WatchCreateRequest) GetServicePort() string {
	if m != nil {
		return m.ServicePort
	}
	return ""
}

func (m *WatchCreateRequest) GetHeartbeatInterval() uint32 {
	if m != nil {
		return m.HeartbeatInterval
	}
	return 0
}

type WatchHeartbeatRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchHeartbeatRequest) Reset()         { *m = WatchHeartbeatRequest{} }
func (m *WatchHeartbeatRequest) String() string { return proto.CompactTextString(m) }
func (*WatchHeartbeatRequest) ProtoMessage()    {}
func (*WatchHeartbeatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{2}
}

func (m *WatchHeartbeatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchHeartbeatRequest.Unmarshal(m, b)
}
func (m *WatchHeartbeatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchHeartbeatRequest.Marshal(b, m, deterministic)
}
func (m *WatchHeartbeatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchHeartbeatRequest.Merge(m, src)
}
func (m *WatchHeartbeatRequest) XXX_Size() int {
	return xxx_messageInfo_WatchHeartbeatRequest.Size(m)
}
func (m *WatchHeartbeatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchHeartbeatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchHeartbeatRequest proto.InternalMessageInfo

type WatchLoadReportRequest struct {
	LoadReportData       *any.Any `protobuf:"bytes,2,opt,name=load_report_data,json=loadReportData,proto3" json:"load_report_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchLoadReportRequest) Reset()         { *m = WatchLoadReportRequest{} }
func (m *WatchLoadReportRequest) String() string { return proto.CompactTextString(m) }
func (*WatchLoadReportRequest) ProtoMessage()    {}
func (*WatchLoadReportRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{3}
}

func (m *WatchLoadReportRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchLoadReportRequest.Unmarshal(m, b)
}
func (m *WatchLoadReportRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchLoadReportRequest.Marshal(b, m, deterministic)
}
func (m *WatchLoadReportRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchLoadReportRequest.Merge(m, src)
}
func (m *WatchLoadReportRequest) XXX_Size() int {
	return xxx_messageInfo_WatchLoadReportRequest.Size(m)
}
func (m *WatchLoadReportRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchLoadReportRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchLoadReportRequest proto.InternalMessageInfo

func (m *WatchLoadReportRequest) GetLoadReportData() *any.Any {
	if m != nil {
		return m.LoadReportData
	}
	return nil
}

type WatchResponse struct {
	WorkerId             uint32      `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	BalanceType          BalanceType `protobuf:"varint,2,opt,name=balance_type,json=balanceType,proto3,enum=proto.BalanceType" json:"balance_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WatchResponse) Reset()         { *m = WatchResponse{} }
func (m *WatchResponse) String() string { return proto.CompactTextString(m) }
func (*WatchResponse) ProtoMessage()    {}
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c826da73fff4a2c7, []int{4}
}

func (m *WatchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchResponse.Unmarshal(m, b)
}
func (m *WatchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchResponse.Marshal(b, m, deterministic)
}
func (m *WatchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchResponse.Merge(m, src)
}
func (m *WatchResponse) XXX_Size() int {
	return xxx_messageInfo_WatchResponse.Size(m)
}
func (m *WatchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchResponse proto.InternalMessageInfo

func (m *WatchResponse) GetWorkerId() uint32 {
	if m != nil {
		return m.WorkerId
	}
	return 0
}

func (m *WatchResponse) GetBalanceType() BalanceType {
	if m != nil {
		return m.BalanceType
	}
	return BalanceType_RoundRobin
}

func init() {
	proto.RegisterType((*WatchRequest)(nil), "proto.WatchRequest")
	proto.RegisterType((*WatchCreateRequest)(nil), "proto.WatchCreateRequest")
	proto.RegisterType((*WatchHeartbeatRequest)(nil), "proto.WatchHeartbeatRequest")
	proto.RegisterType((*WatchLoadReportRequest)(nil), "proto.WatchLoadReportRequest")
	proto.RegisterType((*WatchResponse)(nil), "proto.WatchResponse")
}

func init() { proto.RegisterFile("watch.proto", fileDescriptor_c826da73fff4a2c7) }

var fileDescriptor_c826da73fff4a2c7 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x4f, 0x6f, 0xda, 0x40,
	0x10, 0xc5, 0x6b, 0x2a, 0xaa, 0x32, 0xc6, 0x14, 0x16, 0xfa, 0x07, 0xda, 0x4a, 0xad, 0x4f, 0x5c,
	0x6a, 0x2a, 0xa2, 0xe4, 0x98, 0x28, 0x24, 0x07, 0x50, 0x22, 0x25, 0x5a, 0x45, 0x4a, 0x6e, 0xd6,
	0xda, 0x1e, 0xc0, 0x8a, 0xe5, 0x75, 0xd6, 0x0b, 0xc8, 0xc7, 0x7c, 0xf3, 0x88, 0xdd, 0x25, 0x76,
	0x08, 0x27, 0x7b, 0xdf, 0xbc, 0xf9, 0xad, 0xdf, 0x8c, 0xc1, 0xde, 0x30, 0x19, 0x2e, 0xbd, 0x4c,
	0x70, 0xc9, 0x49, 0x5d, 0x3d, 0x06, 0xfd, 0x05, 0xe7, 0x8b, 0x04, 0x47, 0xea, 0x14, 0xac, 0xe6,
	0x23, 0x96, 0x16, 0xda, 0x31, 0x70, 0x02, 0x96, 0xb0, 0x34, 0x44, 0x7d, 0x74, 0x9f, 0x6b, 0xd0,
	0xbc, 0xdf, 0x02, 0x28, 0x3e, 0xad, 0x30, 0x97, 0x64, 0x02, 0xad, 0x50, 0x20, 0x93, 0xe8, 0x0b,
	0xad, 0xfc, 0xb0, 0xfe, 0x58, 0x43, 0x7b, 0xdc, 0xd7, 0x0d, 0x9e, 0x32, 0x5f, 0x28, 0x87, 0x69,
	0x99, 0x7e, 0xa0, 0x4e, 0x58, 0x15, 0xc8, 0x15, 0x74, 0x96, 0xc8, 0x84, 0x0c, 0x90, 0xc9, 0x57,
	0x4c, 0x4d, 0x61, 0x7e, 0x55, 0x31, 0xd3, 0x9d, 0xa9, 0x24, 0xb5, 0x97, 0x7b, 0x1a, 0xb9, 0x81,
	0x6e, 0xc2, 0x59, 0xe4, 0x0b, 0xcc, 0xb8, 0x28, 0x71, 0x1f, 0x15, 0xee, 0x77, 0x15, 0x77, 0xcd,
	0x59, 0x44, 0x95, 0xab, 0xe4, 0x75, 0x92, 0x7d, 0x71, 0xf2, 0x05, 0x1c, 0x03, 0xf1, 0x57, 0x69,
	0xcc, 0x53, 0x77, 0x0e, 0xe4, 0x7d, 0x2a, 0xf2, 0x17, 0x9a, 0x39, 0x8a, 0x75, 0x1c, 0xa2, 0xbf,
	0xed, 0x56, 0x63, 0x68, 0x50, 0xdb, 0x68, 0xb7, 0x5c, 0x48, 0xf2, 0x0f, 0x48, 0x99, 0x33, 0x4e,
	0x25, 0x8a, 0x35, 0x4b, 0x54, 0x50, 0x87, 0x96, 0x13, 0x98, 0x99, 0x82, 0xfb, 0x1d, 0xbe, 0x1e,
	0x8c, 0xed, 0x3e, 0xc0, 0xb7, 0xc3, 0x01, 0xc8, 0x29, 0xb4, 0xab, 0xe1, 0x23, 0x26, 0x99, 0x19,
	0x64, 0xcf, 0xd3, 0x3b, 0xf6, 0x76, 0x3b, 0xf6, 0xce, 0xd3, 0x82, 0xb6, 0xca, 0xb8, 0x97, 0x4c,
	0x32, 0x37, 0x04, 0xc7, 0x6c, 0x37, 0xcf, 0x78, 0x9a, 0x23, 0xf9, 0x09, 0x8d, 0x0d, 0x17, 0x8f,
	0x28, 0xfc, 0x38, 0x52, 0x91, 0x1c, 0xfa, 0x59, 0x0b, 0xb3, 0x88, 0x1c, 0x43, 0xd3, 0xfc, 0x1d,
	0xbe, 0x2c, 0x32, 0x54, 0x37, 0xb5, 0xc6, 0xc4, 0xcc, 0x78, 0xa2, 0x4b, 0x77, 0x45, 0x86, 0xd4,
	0x0e, 0xca, 0xc3, 0xf8, 0x0c, 0xea, 0xea, 0x12, 0x72, 0xb2, 0x7b, 0xe9, 0x56, 0xd7, 0x62, 0xb2,
	0x0c, 0x7a, 0x6f, 0x45, 0xfd, 0x41, 0x43, 0xeb, 0xbf, 0x15, 0x7c, 0x52, 0x85, 0xa3, 0x97, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x00, 0xac, 0x96, 0x26, 0xcb, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchClient is the client API for Watch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchClient interface {
	Watch(ctx context.Context, opts ...grpc.CallOption) (Watch_WatchClient, error)
}

type watchClient struct {
	cc *grpc.ClientConn
}

func NewWatchClient(cc *grpc.ClientConn) WatchClient {
	return &watchClient{cc}
}

func (c *watchClient) Watch(ctx context.Context, opts ...grpc.CallOption) (Watch_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Watch_serviceDesc.Streams[0], "/proto.Watch/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &watchWatchClient{stream}
	return x, nil
}

type Watch_WatchClient interface {
	Send(*WatchRequest) error
	Recv() (*WatchResponse, error)
	grpc.ClientStream
}

type watchWatchClient struct {
	grpc.ClientStream
}

func (x *watchWatchClient) Send(m *WatchRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *watchWatchClient) Recv() (*WatchResponse, error) {
	m := new(WatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WatchServer is the server API for Watch service.
type WatchServer interface {
	Watch(Watch_WatchServer) error
}

// UnimplementedWatchServer can be embedded to have forward compatible implementations.
type UnimplementedWatchServer struct {
}

func (*UnimplementedWatchServer) Watch(srv Watch_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}

func RegisterWatchServer(s *grpc.Server, srv WatchServer) {
	s.RegisterService(&_Watch_serviceDesc, srv)
}

func _Watch_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(WatchServer).Watch(&watchWatchServer{stream})
}

type Watch_WatchServer interface {
	Send(*WatchResponse) error
	Recv() (*WatchRequest, error)
	grpc.ServerStream
}

type watchWatchServer struct {
	grpc.ServerStream
}

func (x *watchWatchServer) Send(m *WatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *watchWatchServer) Recv() (*WatchRequest, error) {
	m := new(WatchRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Watch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Watch",
	HandlerType: (*WatchServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _Watch_Watch_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "watch.proto",
}
